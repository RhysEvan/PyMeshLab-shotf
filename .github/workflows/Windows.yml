name: Windows

on:
  [push, pull_request]

jobs:
  windows_build_pymeshlab:
    name: Build PyMeshLab (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        pyversion: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Downlaod Jom
      run: |
        Invoke-WebRequest -Uri "http://mirrors.ukfast.co.uk/sites/qt.io/official_releases/jom/jom_1_1_3.zip" -OutFile "jom_1_1_3.zip"
        New-Item -Name "jom" -ItemType "directory"
        Expand-Archive -Path jom_1_1_3.zip -DestinationPath .\jom
        echo "$(Get-Location)\jom" >> GITHUB_PATH
    - name: Setup env variables
      id: envs
      run: |
        echo "name=VCINSTALLDIR::C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC" >> $GITHUB_ENV
        cd src\meshlab
        $var=(git rev-parse --short HEAD --version) | Out-String
        echo "::set-output name=meshlab_commit::$($var)"
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Cache MeshLab Build
      id: cache-meshlab-build
      uses: actions/cache@v2
      with:
        path: |
          src/build/distrib/pymeshlab/lib/
        key: ${{ runner.os }}-meshlab_build-${{steps.envs.outputs.meshlab_commit}}
    - name: Set build meshlab option
      shell: bash
      id: meshlab-build-option
      if: steps.cache-meshlab-build.outputs.cache-hit == 'true'
      run: |
        echo  ::set-output name=meshlab-build-option::"--no-build-meshlab"
    - name: Build PyMeshLab ${{ matrix.pyversion }}
      shell: bash
      run: |
        sh scripts/${{ runner.os }}/1_build.sh ${{steps.meshlab-build-option.outputs.meshlab-build-option}}
    - name: Deploy PyMeshLab ${{ matrix.pyversion }}
      shell: bash
      run: |
        sh scripts/${{ runner.os }}/2_deploy.sh
    - name: Upload PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/

  windows_tests:
    name: Test PyMeshLab (Windows)
    runs-on: windows-latest
    needs: windows_build_pymeshlab
    strategy:
      matrix:
        pyversion: [3.6, 3.7, 3.8, 3.9]
    steps:
    - name: Download PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/download-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Run Tests ${{ matrix.pyversion }}
      shell: bash
      run: |
        pip install pytest numpy
        python -c 'import pymeshlab; pymeshlab.use_cpu_opengl()'
        pytest --pyargs pymeshlab
    - name: Upload PyMeshLab results
      uses: actions/upload-artifact@v2
      with:
        name: PyMeshLabResults_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/tests/sample_meshes/test_output
